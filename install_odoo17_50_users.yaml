---
- name: Install Odoo 17 on multiple servers with unique users
  hosts: all
  become: yes

  vars:
    odoo_password: admin
    odoo_port: 1717
    odoo_service: odoo17
    odoo_install_dir: /opt/odoo
    odoo_venv_dir: /opt/odoo-venv
    odoo_config: /etc/odoo17.conf
    addons_path: /opt/odoo/addons
    odoo_version: 17.0
    odoo_log_dir: /var/log/odoo
    odoo_log_file: /var/log/odoo/odoo17.log

  tasks:
    - name: Set Odoo user from inventory
      set_fact:
        odoo_user: "{{ hostvars[inventory_hostname]['user_name'] | trim }}"

    - name: Update and install required packages
      apt:
        update_cache: yes
        name:
          - git
          - python3
          - python3-pip
          - python3-venv
          - libpq-dev
          - build-essential
          - wget
          - node-less
          - libjpeg-dev
          - libxml2-dev
          - libxslt1-dev
          - zlib1g-dev
          - libsasl2-dev
          - libldap2-dev
          - libffi-dev
          - libssl-dev
          - wkhtmltopdf
          - postgresql
          - nginx
        state: present

    - name: Create Odoo system user
      user:
        name: "{{ odoo_user }}"
        shell: /bin/bash
        system: yes
        create_home: yes

    - name: Ensure PostgreSQL role exists for Odoo user
      shell: |
        sudo -u postgres psql -tAc "SELECT 1 FROM pg_roles WHERE rolname='{{ odoo_user }}'" | grep -q 1 || sudo -u postgres createuser -s {{ odoo_user }}
      args:
        executable: /bin/bash

    - name: Secure PostgreSQL (disable remote connections)
      lineinfile:
        path: /etc/postgresql/16/main/postgresql.conf
        regexp: '^#?listen_addresses\s*='
        line: "listen_addresses = 'localhost'"
      notify: Restart PostgreSQL

    - name: Clone Odoo 17 from GitHub
      git:
        repo: "https://github.com/odoo/odoo.git"
        dest: "{{ odoo_install_dir }}"
        version: "{{ odoo_version }}"
        depth: 1

    - name: Create custom addons directory
      file:
        path: "{{ addons_path }}"
        state: directory
        owner: "{{ odoo_user }}"
        group: "{{ odoo_user }}"

    - name: Create virtual environment for Odoo
      command: python3 -m venv "{{ odoo_venv_dir }}"
      args:
        creates: "{{ odoo_venv_dir }}/bin/activate"

    - name: Install Python dependencies using pip
      pip:
        requirements: "{{ odoo_install_dir }}/requirements.txt"
        virtualenv: "{{ odoo_venv_dir }}"
        virtualenv_python: python3

    - name: Create Odoo log directory
      file:
        path: "{{ odoo_log_dir }}"
        state: directory
        owner: "{{ odoo_user }}"
        group: "{{ odoo_user }}"
        mode: '0755'

    - name: Create initial empty log file
      file:
        path: "{{ odoo_log_file }}"
        state: touch
        owner: "{{ odoo_user }}"
        group: "{{ odoo_user }}"
        mode: '0644'

    - name: Create Odoo configuration file
      copy:
        dest: "{{ odoo_config }}"
        content: |
          [options]
          addons_path = {{ addons_path }}
          data_dir = /var/lib/odoo
          db_host = False
          db_port = False
          db_user = {{ odoo_user }}
          db_password = {{ odoo_password }}
          admin_passwd = admin
          xmlrpc_port = {{ odoo_port }}
          xmlrpc_interface = 0.0.0.0
          logfile = {{ odoo_log_file }}
          limit_time_cpu = 600
          limit_time_real = 300
        owner: "{{ odoo_user }}"
        group: "{{ odoo_user }}"
        mode: '0644'

    - name: Create session directory
      file:
        path: /var/lib/odoo
        state: directory
        owner: "{{ odoo_user }}"
        group: "{{ odoo_user }}"
        mode: '0755'

    - name: Create systemd service for Odoo 17
      copy:
        dest: /etc/systemd/system/{{ odoo_service }}.service
        content: |
          [Unit]
          Description=Odoo 17
          Requires=postgresql.service
          After=network.target postgresql.service

          [Service]
          Type=simple
          SyslogIdentifier={{ odoo_service }}
          PermissionsStartOnly=true
          User={{ odoo_user }}
          Group={{ odoo_user }}
          ExecStart={{ odoo_venv_dir }}/bin/python3 {{ odoo_install_dir }}/odoo-bin -c {{ odoo_config }}
          StandardOutput=journal+console

          [Install]
          WantedBy=multi-user.target
        mode: '0644'

    - name: Reload systemd
      command: systemctl daemon-reexec

    - name: Enable and start Odoo 17 service
      systemd:
        name: "{{ odoo_service }}"
        enabled: yes
        state: restarted

  handlers:
    - name: Restart PostgreSQL
      systemd:
        name: postgresql
        state: restarted
